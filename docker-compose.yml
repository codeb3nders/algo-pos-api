services:
  algo-pos:
    build:
      context: .
      dockerfile: ./apps/algo-pos/Dockerfile
      target: development
    command: npm run start:dev algo-pos
    env_file:
      - ./apps/algo-pos/.env
    depends_on:
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '4000:4000'

  inventory:
    build:
      context: .
      dockerfile: ./apps/inventory/Dockerfile
      target: development
    command: npm run start:dev inventory
    env_file:
      - ./apps/inventory/.env
    depends_on:
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  
  orders:
    build:
      context: .
      dockerfile: ./apps/orders/Dockerfile
      target: development
    command: npm run start:dev orders
    env_file:
      - ./apps/orders/.env
    depends_on:
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3001:3001'
  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'

  mongo_db:
    image: mongo:latest
    restart: always
    volumes:
      - mongo_db:/data/db
  
volumes:
  mongo_db: {}
