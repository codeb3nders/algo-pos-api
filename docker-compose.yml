services:
  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
      target: development
    command: npm run start:dev api
    env_file:
      - ./apps/api/.env
    depends_on:
      # - mongo_db
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '4000:4000'

  inventory:
    build:
      context: .
      dockerfile: ./apps/inventory/Dockerfile
      target: development
    command: npm run start:dev inventory
    env_file:
      - ./apps/inventory/.env
    depends_on:
      # - mongo_db
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  
  orders:
    build:
      context: .
      dockerfile: ./apps/orders/Dockerfile
      target: development
    command: npm run start:dev orders
    env_file:
      - ./apps/orders/.env
    depends_on:
      # - mongo_db
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3002:3002'
  
  products:
    build:
      context: .
      dockerfile: ./apps/products/Dockerfile
      target: development
    command: npm run start:dev products
    env_file:
      - ./apps/products/.env
    depends_on:
      # - mongo_db
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3003:3003'
  

  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    ports:
      - '3001:3001'
    env_file:
      - ./apps/auth/.env
    depends_on:
      # - mongo_db
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      
  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'

#   mongo_db:
#     image: mongo:latest    
#     restart: always
#     environment:
#       - MONGODB_ADVERTISED_HOSTNAME=mongo_db
#       - MONGODB_REPLICA_SET_MODE=primary
#       - MONGODB_REPLICA_SET_KEY=replicasetkey123
#     volumes:
#       - mongo_db:/data/db
#     ports:
#       - '27017:27017'

#   mongodb-secondary:
#     image: mongo:latest
#     depends_on:
#       - mongo_db
#     environment:
#       - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
#       - MONGODB_REPLICA_SET_MODE=secondary
#       - MONGODB_INITIAL_PRIMARY_HOST=mongo_db
#       - MONGODB_REPLICA_SET_KEY=replicasetkey123

#   mongodb-arbiter:
#     image: mongo:latest
#     depends_on:
#       - mongo_db
#     environment:
#       - MONGODB_ADVERTISED_HOSTNAME=mongodb-arbiter
#       - MONGODB_REPLICA_SET_MODE=arbiter
#       - MONGODB_INITIAL_PRIMARY_HOST=mongo_db
#       - MONGODB_REPLICA_SET_KEY=replicasetkey123
    
  
# volumes:
#   mongo_db:
#     driver: local
